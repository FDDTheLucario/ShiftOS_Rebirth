//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ShiftOS.Engine.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ShiftOS.Engine.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string hello {
            get {
                return ResourceManager.GetString("hello", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [
        ///	&quot;english&quot;
        ///	&quot;deutsch - in beta&quot;
        ///].
        /// </summary>
        internal static string languages {
            get {
                return ResourceManager.GetString("languages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string pywintemplate {
            get {
                return ResourceManager.GetString("pywintemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to /*
        /// * THIS IS AN EXAMPLE FILE
        /// *
        /// * Any Shiftorium upgrades placed in here won&apos;t be recognized by the main ShiftOS frontend
        /// * (ShiftOS.WinForms). It uses its own Shiftorium definition file found in its Resources.
        /// */
        ///
        ///[
        ///	{
        ///		Name: &quot;MUD Fundamentals&quot;,
        ///		Cost: 50,
        ///		Description: &quot;Some basic commands for the terminal that&apos;ll help you out in the multi-user domain.&quot;,
        ///		Dependencies: null
        ///	},
        ///	{
        ///		Name: &quot;WM 4 Windows&quot;,
        ///		Cost: 150,
        ///		Description: &quot;Display up to 4 simultaneous windows on-screen in a 2x2 grid.&quot;,
        ///	 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Shiftorium {
            get {
                return ResourceManager.GetString("Shiftorium", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [
        ///	&quot;http://downloads.michaeltheshifter.me/music/blockride.mp3&quot;,
        ///	&quot;http://downloads.michaeltheshifter.me/music/nightcoding.mp3&quot;
        ///].
        /// </summary>
        internal static string Songs {
            get {
                return ResourceManager.GetString("Songs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///	&quot;{SUBMIT}&quot;:&quot;Bestätigen&quot;,
        ///
        ///&quot;{TERMINAL_TUTORIAL_1}&quot;:&quot;Wilkommen zum ShiftOS Terminal. Hier wirst du die meiste Zeit in ShiftOS verbringen.
        ///  
        ///Eine kurze Erklärung wie du das Terminal benutzt lautet wiefolgt. Du kannst das command &apos;sos.help&apos; benutzen um eine Liste aller commands aufzurufen. Schreib es
        ///einfach in das Terminal und drücke &lt;enter&gt; um alle commands anzuzeigen.
        /// 
        ///Commands können mit argumenten versehen werden, indem du ein key-value Paar in einem {} Block hinter dem command angibst. Zum Beispiel:
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string strings_de {
            get {
                return ResourceManager.GetString("strings_de", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///	&quot;{SUBMIT}&quot;:&quot;Submit&quot;,
        ///
        ///&quot;{TERMINAL_TUTORIAL_1}&quot;:&quot;Welcome to the ShiftOS terminal. This is where you will spend the bulk of your time within ShiftOS.
        ///	
        ///A brief rundown of how to use the terminal is as follows. You can use the &apos;sos.help&apos; command to show a list of all commands. Simply type it in and strike &lt;enter&gt; to view all commands.
        ///	
        ///Commands can be sent arguments by specifying a key-value pair inside a {} block at the end of the command. For example:
        ///	
        ///some.command{print:\&quot;hello\&quot;}
        ///math.add{op1:1,op2:2}
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string strings_en {
            get {
                return ResourceManager.GetString("strings_en", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///	Character: &quot;sys&quot;,
        ///	Lines:[
        ///		&quot;Hello there, %user.&quot;,
        ///		&quot;Welcome to ShiftOS.&quot;,
        ///		&quot;This is an automated message to all new sentiences within the ShiftOS multi-user domain.&quot;,
        ///		&quot;Before you can begin with ShiftOS, you&apos;ll need to know a few things about it.&quot;,
        ///		&quot;One: Terminal command syntax.&quot;,
        ///		&quot;Inside ShiftOS, the bulk of your time is going to be spent within the Terminal.&quot;,
        ///		&quot;The Terminal is an application that starts up when you turn on your computer. It allows you to execute system commands, open program [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string sys_shiftoriumstory {
            get {
                return ResourceManager.GetString("sys_shiftoriumstory", resourceCulture);
            }
        }
    }
}
